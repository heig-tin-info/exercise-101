#!/bin/env/python3 -mbaygon
---
version: 1
tests:
  - name: printf
    tests:
      - name: printf/1.c
        executable: ./1.out
        tests:
          - name: Affichage de hello, world sur la sortie standard
            stdout: [{regex: "hello\\s*,\\s*world"}]
          - name: Status de sortie
            exit: 0
      - name: printf/2.c
        executable: ./2.out
        tests:
          - name: Affichage de la variable foo à l'écran
            stdout: [{regex: \b42\b}]
          - name: Status de sortie
            exit: 0
      - name: printf/3.c
        executable: ./3.out
        tests:
          - name: Affichage de la variable foo à l'écran
            stdout: [{regex: \b3.141592\b}]
          - name: Status de sortie
            exit: 0
      - name: printf/4.c
        executable: ./4.out
        tests:
          - name: Affichage avec 2 digits après la virgule
            stdout: [{regex: \b\.\d\d\b}]
          - name: Status de sortie
            exit: 0
          - name: 5 zéros devant le nombre
            stdout: [{regex: "\\b(?<!0)0{5}[^0]"}]
      - name: printf/5.c
        executable: ./5.out
        tests:
          - name: Affichage des valeurs séparées par un séparateur
            stdout: [{regex: "23.*?3\\.1415.*?6.28.*?99" }]
          - name: Status de sortie
            exit: 0
          - name: Affichage des valeurs séparées par une tabulation
            stdout: [{regex: "23\\t3\\.1415\\d*\\t6.28\\d*\\t99" }]
      - name: printf/6.c
        executable: ./6.out
        tests:
          - name: Question 1
            stdout: [{regex: "Q1[^']+'(z)(7)\\1 {5}\\2\\1\\\\n'" }]
          - name: Question 2
            stdout: [{regex: "Q2[^']+'(7)\\1\\.0{6}\\\\n'" }]
          - name: Question 3
            stdout: [{regex: "Q3[^']+'36,1e,1E'" }]
          - name: Question 4
            stdout: [{regex: "Q4[^']+'(7)\\1'" }]
      - name: printf/7.c
        executable: ./7.out
        tests:
          - name: Affichage du nom comme demandé
            stdout: [{regex: Name:\s+\w+ }]
          - name: Affichage de la date format YYYY
            stdout: [{regex: Birth Year:\s+(19|20)\d\d }]
          - name: Affichage du code pays
            stdout: [{regex: Mobile:\s+\+\d+\s+ }]
          - name: Affichage du numéro de téléphone
            stdout: [{regex: Mobile:\s+\+\d+\s+\d+ }]
      - name: printf/8.c
        executable: ./8.out
        tests:
          - name: a + c = 212
            stdout: [{contains: a + c = 212 }]
          - name: x + c = 89.13
            stdout: [{contains: x + c = 89.13 }]
          - name: dx + x = +0003.28
            stdout: [{contains: dx + x = +0003.28 }]
          - name: ((int) dx) + ax = 1234567891
            stdout: [{contains: ((int) dx) + ax = 1234567891 }]
          - name: a + s = 0x1048
            stdout: [{contains: a + s = 0x1048 }]                                
          - name: s + b = 040004
            stdout: [{contains: s + b = 040004 }]                                
          - name: ax * ux = 3137738107249052100
            stdout: [{contains: ax * ux = 3137738107249052100 }]  
